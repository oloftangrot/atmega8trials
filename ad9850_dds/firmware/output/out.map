Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
                              usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv.o
usbDeviceAddr       0x1               usbdrv.o
usbRxToken          0x1               usbdrv.o
usbInputBufOffset   0x1               usbdrv.o
usbMsgPtr           0x2               usbdrv.o
usbRxLen            0x1               usbdrv.o
usbNewDeviceAddr    0x1               usbdrv.o
usbCurrentTok       0x1               usbdrv.o
usbConfiguration    0x1               usbdrv.o
usbRxBuf            0x16              usbdrv.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
LOAD main.o
LOAD usbdrv.o
LOAD usbdrvasm.o
LOAD oddebug.o
LOAD /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6c0
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x58 usbdrv.o
                0x0000000000000026                usbDescriptorConfiguration
                0x0000000000000038                usbDescriptorDevice
                0x000000000000004a                usbDescriptorStringDevice
                0x0000000000000060                usbDescriptorStringVendor
                0x000000000000007a                usbDescriptorString0
                0x000000000000007e                . = ALIGN (0x2)
                0x000000000000007e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007e                __ctors_start = .
 *(.ctors)
                0x000000000000007e                __ctors_end = .
                0x000000000000007e                __dtors_start = .
 *(.dtors)
                0x000000000000007e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007e        0x0 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
                0x000000000000007e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007e        0xc /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000008a       0x16 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
                0x000000000000008a                __do_copy_data
 .init4         0x00000000000000a0       0x10 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000a0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000b0        0x4 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b4        0x2 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000000000b4                __vector_12
                0x00000000000000b4                __bad_interrupt
                0x00000000000000b4                __vector_6
                0x00000000000000b4                __vector_3
                0x00000000000000b4                __vector_11
                0x00000000000000b4                __vector_13
                0x00000000000000b4                __vector_17
                0x00000000000000b4                __vector_7
                0x00000000000000b4                __vector_5
                0x00000000000000b4                __vector_4
                0x00000000000000b4                __vector_9
                0x00000000000000b4                __vector_2
                0x00000000000000b4                __vector_15
                0x00000000000000b4                __vector_8
                0x00000000000000b4                __vector_14
                0x00000000000000b4                __vector_10
                0x00000000000000b4                __vector_16
                0x00000000000000b4                __vector_18
 .text          0x00000000000000b6       0xc8 main.o
                0x00000000000000b6                usbFunctionWrite
                0x00000000000000f6                usbFunctionSetup
 .text          0x000000000000017e      0x22a usbdrv.o
                0x000000000000017e                usbPoll
                0x000000000000039a                usbInit
 .text          0x00000000000003a8      0x2ea usbdrvasm.o
                0x00000000000003a8                usbCrc16
                0x00000000000003da                usbCrc16Append
                0x00000000000003e2                __vector_1
 .text          0x0000000000000692        0x0 oddebug.o
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000692        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000692                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000692       0x2a main.o
                0x0000000000000692                main
 .text.libgcc.mul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
                0x00000000000006bc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006bc        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
                0x00000000000006bc                exit
                0x00000000000006bc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006bc        0x4 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006c0                _etext = .

.data           0x0000000000800060        0x2 load address 0x00000000000006c0
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x2 usbdrv.o
                0x0000000000800060                usbTxLen
                0x0000000000800061                usbMsgLen
 .data          0x0000000000800062        0x0 usbdrvasm.o
 .data          0x0000000000800062        0x0 oddebug.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                0x0000000000800062                PROVIDE (__data_end, .)

.bss            0x0000000000800062       0x2f
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800062        0x4 main.o
 .bss           0x0000000000800066        0x1 usbdrv.o
 .bss           0x0000000000800067        0x0 usbdrvasm.o
 .bss           0x0000000000800067        0x0 oddebug.o
 .bss           0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800067        0x0 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800067       0x2a usbdrv.o
                0x0000000000800067                usbTxBuf
                0x0000000000800072                usbDeviceAddr
                0x0000000000800073                usbRxToken
                0x0000000000800074                usbInputBufOffset
                0x0000000000800075                usbMsgPtr
                0x0000000000800077                usbRxLen
                0x0000000000800078                usbNewDeviceAddr
                0x0000000000800079                usbCurrentTok
                0x000000000080007a                usbConfiguration
                0x000000000080007b                usbRxBuf
                0x0000000000800091                PROVIDE (__bss_end, .)
                0x00000000000006c0                __data_load_start = LOADADDR (.data)
                0x00000000000006c2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800091        0x0
                0x0000000000800091                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800091                PROVIDE (__noinit_end, .)
                0x0000000000800091                _end = .
                0x0000000000800091                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x8c4
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x6c /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000738       0xd8 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000810       0xb4 /usr/lib/gcc/avr/4.7.3/avr4/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0xe5
 *(.stabstr)
 .stabstr       0x0000000000000000       0xe5 /usr/lib/gcc/avr/4.7.3/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x39
 *(.comment)
 .comment       0x0000000000000000       0x39 main.o
                                         0x3a (size before relaxing)
 .comment       0x0000000000000000       0x3a usbdrv.o
 .comment       0x0000000000000000       0x3a oddebug.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o
 .debug_aranges
                0x0000000000000028       0x20 usbdrv.o
 .debug_aranges
                0x0000000000000048       0x20 usbdrvasm.o
 .debug_aranges
                0x0000000000000068       0x18 oddebug.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x9ec
 *(.debug_info)
 .debug_info    0x0000000000000000      0x254 main.o
 .debug_info    0x0000000000000254      0x6c6 usbdrv.o
 .debug_info    0x000000000000091a       0x7c usbdrvasm.o
 .debug_info    0x0000000000000996       0x56 oddebug.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x3bf
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x12d main.o
 .debug_abbrev  0x000000000000012d      0x258 usbdrv.o
 .debug_abbrev  0x0000000000000385       0x14 usbdrvasm.o
 .debug_abbrev  0x0000000000000399       0x26 oddebug.o

.debug_line     0x0000000000000000      0x403
 *(.debug_line)
 .debug_line    0x0000000000000000       0xe2 main.o
 .debug_line    0x00000000000000e2      0x139 usbdrv.o
 .debug_line    0x000000000000021b      0x1cb usbdrvasm.o
 .debug_line    0x00000000000003e6       0x1d oddebug.o

.debug_frame    0x0000000000000000       0x84
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x44 main.o
 .debug_frame   0x0000000000000044       0x40 usbdrv.o

.debug_str      0x0000000000000000      0x35d
 *(.debug_str)
 .debug_str     0x0000000000000000      0x167 main.o
                                        0x1a4 (size before relaxing)
 .debug_str     0x0000000000000167      0x1e2 usbdrv.o
                                        0x370 (size before relaxing)
 .debug_str     0x0000000000000349       0x14 oddebug.o
                                         0xdb (size before relaxing)

.debug_loc      0x0000000000000000      0x59c
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0xbb main.o
 .debug_loc     0x00000000000000bb      0x4e1 usbdrv.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0xc8
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x18 main.o
 .debug_ranges  0x0000000000000018       0xb0 usbdrv.o

.debug_macro
 *(.debug_macro)
OUTPUT(out.elf elf32-avr)
LOAD linker stubs
